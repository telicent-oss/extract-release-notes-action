name: Action Self-Tests
on:
  push:
    branches:
      - "**"
    tags:
      - "**"
  workflow_dispatch:
jobs:
  simple-success:
    strategy:
      matrix:
        version: [ "1.0.0", "1.2", "1.2.1", "1.2.2", "1.2.3" ]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Release Notes
        id: extract
        uses: telicent-oss/extract-release-notes-action@v1
        with:
          changelog-file: test-data/simple.md
          version: ${{ matrix.version }}
          fail-if-missing: true
          attach-release-notes: true
          job-summary: true

      - name: Print Outputs for Debugging
        run: |
          echo "Release Notes file is ${{ steps.extract.outputs.release-notes-file }}"
          echo "Auto-Release notes set to ${{ steps.extract.outputs.auto-release-notes }}"
          echo "Release Notes artifact is ${{ steps.extract.outputs.release-notes-artifact }}"

      - name: Fail if no release notes output
        if: ${{ steps.extract.outputs.release-notes-file == '' }}
        run: |
          exit 1

      - name: Ensure Release Notes can be downloaded
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.extract.outputs.release-notes-artifact }}
          path: /tmp/

  simple-fail:
    strategy:
      matrix:
        version: [ "1", "1.0", "1.2.4", "2.0.0", "0.1.2" ]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Release Notes
        id: extract
        uses: telicent-oss/extract-release-notes-action@v1
        continue-on-error: true
        with:
          changelog-file: test-data/simple.md
          version: ${{ matrix.version }}
          fail-if-missing: true
          job-summary: false

      - name: Verify Release Note Extraction Failed
        if: ${{ steps.extract.outcome == 'success' }}
        run: |
          echo "Release Note Extraction should have failed"
          exit 1

  multi-entry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Release Notes
        id: extract
        uses: telicent-oss/extract-release-notes-action@v1
        with:
          changelog-file: test-data/multi-entry.md
          version: 1.0.0
          fail-if-missing: true
          attach-release-notes: true
          job-summary: true

      - name: Print Outputs for Debugging
        run: |
          echo "Release Notes file is ${{ steps.extract.outputs.release-notes-file }}"
          echo "Auto-Release notes set to ${{ steps.extract.outputs.auto-release-notes }}"
          echo "Release Notes artifact is ${{ steps.extract.outputs.release-notes-artifact }}"

      - name: Fail if no release notes output
        if: ${{ steps.extract.outputs.release-notes-file == '' }}
        run: |
          exit 1

      - name: Fail if wrong release notes extracted
        run: |
          if grep "Bar" "${{ steps.extract.outputs.release-notes-file }}" >/dev/null 2>&1; then
            echo "Wrong release notes extracted"
            exit 1
          fi

  sub-headers:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Release Notes
        id: extract
        uses: telicent-oss/extract-release-notes-action@v1
        with:
          changelog-file: test-data/sub-headers.md
          version: 1.0.0
          fail-if-missing: true
          attach-release-notes: true
          job-summary: true

      - name: Print Outputs for Debugging
        run: |
          echo "Release Notes file is ${{ steps.extract.outputs.release-notes-file }}"
          echo "Auto-Release notes set to ${{ steps.extract.outputs.auto-release-notes }}"

      - name: Fail if no release notes output
        if: ${{ steps.extract.outputs.release-notes-file == '' }}
        run: |
          exit 1

      - name: Fail if sub-header content is not extracted
        run: |
          if ! grep "BUG" "${{ steps.extract.outputs.release-notes-file }}" >/dev/null 2>&1; then
            echo "Failed to extract sub-header content"
            exit 1
          fi
        
  chain-start:
    runs-on: ubuntu-latest
    outputs:
      release-notes-artifact: ${{ steps.extract.outputs.release-notes-artifact }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Release Notes
        id: extract
        uses: telicent-oss/extract-release-notes-action@v1
        continue-on-error: true
        with:
          changelog-file: test-data/simple.md
          version: 1.2.1
          fail-if-missing: true
          job-summary: true
          attach-release-notes: true

  chain-end:
    runs-on: ubuntu-latest
    needs: chain-start
    steps:
      - name: Download Extracted Release Notes
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.chain-start.outputs.release-notes-artifact }}

      - name: Ensure a Release Notes file exists
        run: |
          if [ ! -f "release-notes.txt" ]; then
            echo "Expected a release-notes.txt file to have been downloaded"
            pwd
            ls -lh
            exit 1
          fi

  complex-success:
    strategy:
      matrix:
        version: [ "1.0.0", "0.9.0" ]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Release Notes
        id: extract
        uses: telicent-oss/extract-release-notes-action@v1
        with:
          changelog-file: test-data/complex.md
          version: ${{ matrix.version }}
          fail-if-missing: true
          attach-release-notes: true
          job-summary: true

      - name: Print Outputs for Debugging
        run: |
          echo "Release Notes file is ${{ steps.extract.outputs.release-notes-file }}"
          echo "Auto-Release notes set to ${{ steps.extract.outputs.auto-release-notes }}"
          echo "Release Notes artifact is ${{ steps.extract.outputs.release-notes-artifact }}"

      - name: Fail if no release notes output
        if: ${{ steps.extract.outputs.release-notes-file == '' }}
        run: |
          exit 1

      - name: Ensure Release Notes can be downloaded
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.extract.outputs.release-notes-artifact }}
          path: /tmp/

  complex-fail:
    strategy:
      matrix:
        version: [ "1", "1.0", "2.0.0", "0.1.2" ]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Release Notes
        id: extract
        uses: telicent-oss/extract-release-notes-action@v1
        continue-on-error: true
        with:
          changelog-file: test-data/complex.md
          version: ${{ matrix.version }}
          fail-if-missing: true
          job-summary: false

      - name: Verify Release Note Extraction Failed
        if: ${{ steps.extract.outcome == 'success' }}
        run: |
          echo "Release Note Extraction should have failed"
          exit 1

  year-style:
    strategy:
      matrix:
        version: [ "2024", "202406", "2024062", "20.40.20" ]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Release Notes
        id: extract
        uses: telicent-oss/extract-release-notes-action@v1
        continue-on-error: true
        with:
          changelog-file: test-data/year-style.md
          version: ${{ matrix.version }}
          fail-if-missing: true
          job-summary: false

      - name: Verify Release Note Extraction Failed
        if: ${{ steps.extract.outcome == 'success' }}
        run: |
          echo "Release Note Extraction should have failed"
          exit 1

  named-success:
    strategy:
      matrix:
        version: [ "1.0.0", "1.1.0" ]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Release Notes
        id: extract
        uses: telicent-oss/extract-release-notes-action@v1
        with:
          changelog-file: test-data/named.md
          version: ${{ matrix.version }}
          fail-if-missing: true
          attach-release-notes: true
          job-summary: true

      - name: Print Outputs for Debugging
        run: |
          echo "Release Notes file is ${{ steps.extract.outputs.release-notes-file }}"
          echo "Auto-Release notes set to ${{ steps.extract.outputs.auto-release-notes }}"
          echo "Release Notes artifact is ${{ steps.extract.outputs.release-notes-artifact }}"

      - name: Fail if no release notes output
        if: ${{ steps.extract.outputs.release-notes-file == '' }}
        run: |
          exit 1

      - name: Ensure Release Notes can be downloaded
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.extract.outputs.release-notes-artifact }}
          path: /tmp/

  titled-success:
    strategy:
      matrix:
        version: [ "1.0.0", "1.0.1" ]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Release Notes
        id: extract
        uses: telicent-oss/extract-release-notes-action@v1
        with:
          changelog-file: test-data/named.md
          version: ${{ matrix.version }}
          fail-if-missing: true
          attach-release-notes: true
          job-summary: true

      - name: Print Outputs for Debugging
        run: |
          echo "Release Notes file is ${{ steps.extract.outputs.release-notes-file }}"
          echo "Auto-Release notes set to ${{ steps.extract.outputs.auto-release-notes }}"
          echo "Release Notes artifact is ${{ steps.extract.outputs.release-notes-artifact }}"

      - name: Fail if no release notes output
        if: ${{ steps.extract.outputs.release-notes-file == '' }}
        run: |
          exit 1

      - name: Ensure Release Notes can be downloaded
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.extract.outputs.release-notes-artifact }}
          path: /tmp/
